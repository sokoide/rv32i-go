// Code generated by "stringer -type InstructionType"; DO NOT EDIT.

package rv32i

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InstructionTypeU-0]
	_ = x[InstructionTypeJ-1]
	_ = x[InstructionTypeB-2]
	_ = x[InstructionTypeI-3]
	_ = x[InstructionTypeS-4]
	_ = x[InstructionTypeR-5]
	_ = x[InstructionTypeF-6]
	_ = x[InstructionTypeC-7]
}

const _InstructionType_name = "InstructionTypeUInstructionTypeJInstructionTypeBInstructionTypeIInstructionTypeSInstructionTypeRInstructionTypeFInstructionTypeC"

var _InstructionType_index = [...]uint8{0, 16, 32, 48, 64, 80, 96, 112, 128}

func (i InstructionType) String() string {
	if i < 0 || i >= InstructionType(len(_InstructionType_index)-1) {
		return "InstructionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InstructionType_name[_InstructionType_index[i]:_InstructionType_index[i+1]]
}
